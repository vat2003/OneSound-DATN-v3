{"version":3,"file":"ngx-sharebuttons.mjs","sources":["../../../projects/ngx-sharebuttons/src/lib/share.models.ts","../../../projects/ngx-sharebuttons/src/lib/utils.ts","../../../projects/ngx-sharebuttons/src/lib/share.defaults.ts","../../../projects/ngx-sharebuttons/src/lib/share.service.ts","../../../projects/ngx-sharebuttons/src/lib/share-button.directive.ts","../../../projects/ngx-sharebuttons/src/lib/share.module.ts","../../../projects/ngx-sharebuttons/src/ngx-sharebuttons.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\nimport { Clipboard } from '@angular/cdk/clipboard';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { shareButtonName } from './share.defaults';\r\n\r\nexport const SHARE_BUTTONS_CONFIG = new InjectionToken<ShareButtonsConfig>('shareButtonsConfig');\r\n\r\n/**\r\n * Share buttons config\r\n */\r\nexport interface ShareButtonsConfig {\r\n  sharerMethod?: SharerMethod;\r\n  sharerTarget?: string;\r\n  windowObj?: any;\r\n  windowFuncName?: string;\r\n  prop?: IShareButtons;\r\n  theme?: string;\r\n  include?: shareButtonName[];\r\n  exclude?: shareButtonName[];\r\n  url?: string;\r\n  title?: string;\r\n  description?: string;\r\n  image?: string;\r\n  tags?: string;\r\n  appId?: string;\r\n  redirectUrl?: string;\r\n  twitterAccount?: string;\r\n  autoSetMeta?: boolean;\r\n  gaTracking?: boolean;\r\n  windowWidth?: number;\r\n  windowHeight?: number;\r\n  moreButtonIcon?: any;\r\n  lessButtonIcon?: any;\r\n  moreButtonAriaLabel?: string;\r\n  lessButtonAriaLabel?: string;\r\n  debug?: boolean;\r\n}\r\n\r\n/**\r\n * Share buttons collection\r\n */\r\nexport interface IShareButtons {\r\n  facebook?: IShareButton;\r\n  twitter?: IShareButton;\r\n  linkedin?: IShareButton;\r\n  google?: IShareButton;\r\n  tumblr?: IShareButton;\r\n  mix?: IShareButton;\r\n  pinterest?: IShareButton;\r\n  reddit?: IShareButton;\r\n  viber?: IShareButton;\r\n  vk?: IShareButton;\r\n  telegram?: IShareButton;\r\n  messenger?: IShareButton;\r\n  whatsapp?: IShareButton;\r\n  xing?: IShareButton;\r\n  line?: IShareButton;\r\n  sms?: IShareButton;\r\n  email?: IShareButton;\r\n  print?: IShareButton;\r\n  copy?: IShareButton;\r\n}\r\n\r\nexport class IShareButton {\r\n  /** Share button type */\r\n  type?: string;\r\n  /** Share button text */\r\n  text?: string;\r\n  /** Share button aria label attribute */\r\n  ariaLabel?: string;\r\n  /** Share button icon (FontAwesome) */\r\n  icon?: string | string[] | any;\r\n  /** Share button color */\r\n  color?: string;\r\n  /** Sharer target used in opening the share window */\r\n  target?: string;\r\n  /** Sharer method */\r\n  method?: SharerMethod;\r\n  /** Sharer base URL */\r\n  share?: {\r\n    desktop?: string;\r\n    android?: string;\r\n    ios?: string;\r\n  };\r\n  /** Sharer URL params */\r\n  params?: ShareParams;\r\n  /**\r\n   * Params function: A function that resolves the param value (Advanced use)\r\n   *  Use case: To define a custom template for share buttons like Email, whatsapp, telegram, sms ...etc\r\n   */\r\n  paramsFunc?: ShareParamsFuncMetaData;\r\n  /**\r\n   * Object used to attach additional data in a custom template for 'paramsFunc'\r\n   */\r\n  data?: any;\r\n  /**\r\n   * Some button do not open a share window, instead they execute a function like Print and Copy buttons.\r\n   */\r\n  func?: (args: ShareButtonFuncArgs<any>) => Observable<any>;\r\n}\r\n\r\n/**\r\n * Share params\r\n */\r\nexport interface ShareParams {\r\n  url?: string;\r\n  title?: string;\r\n  description?: string;\r\n  image?: string;\r\n  tags?: string;\r\n  via?: string;\r\n  appId?: string;\r\n  redirectUrl?: string;\r\n}\r\n\r\n/**\r\n * Share param function (Used to define message body template)\r\n */\r\nexport type ShareParamsFunc = (p: ShareParams) => string;\r\n\r\n/**\r\n * Share params available functions\r\n */\r\ninterface ShareParamsFuncMetaData {\r\n  url?: ShareParamsFunc;\r\n  title?: ShareParamsFunc;\r\n  description?: ShareParamsFunc;\r\n  image?: ShareParamsFunc;\r\n  tags?: ShareParamsFunc;\r\n  via?: ShareParamsFunc;\r\n  redirectUrl?: ShareParamsFunc;\r\n}\r\n\r\n/**\r\n * Share button function arguments (used in copyToClipboard as function arguments)\r\n */\r\nexport interface ShareButtonFuncArgs<T> {\r\n  clipboard?: Clipboard;\r\n  params?: ShareParams;\r\n  data?: T;\r\n  updater?: Subject<ShareDirectiveUpdater>;\r\n}\r\n\r\n/**\r\n * Share directive updater arguments (used in copyToClipboard to update button text and icon)\r\n */\r\nexport interface ShareDirectiveUpdater {\r\n  icon: string | string[];\r\n  text: string;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport enum SharerMethod {\r\n  Anchor = 'anchor',\r\n  Window = 'window'\r\n}\r\n","import { Observable, of, Subscriber } from 'rxjs';\r\nimport { delay, take, tap } from 'rxjs/operators';\r\nimport { ShareButtonFuncArgs } from './share.models';\r\n\r\n/**\r\n * Simple object check.\r\n */\r\nfunction isObject(item): boolean {\r\n  return (item && typeof item === 'object' && !Array.isArray(item));\r\n}\r\n\r\n/**\r\n * Deep merge two objects.\r\n */\r\nexport function mergeDeep(target, ...sources) {\r\n  if (!sources.length) {\r\n    return target;\r\n  }\r\n  const source = sources.shift();\r\n\r\n  if (isObject(target) && isObject(source)) {\r\n    for (const key in source) {\r\n      if (isObject(source[key])) {\r\n        if (!target[key]) {\r\n          Object.assign(target, {[key]: {}});\r\n        }\r\n        mergeDeep(target[key], source[key]);\r\n      } else {\r\n        Object.assign(target, {[key]: source[key]});\r\n      }\r\n    }\r\n  }\r\n\r\n  return mergeDeep(target, ...sources);\r\n}\r\n\r\n/** Returns a valid URL or falls back to current URL */\r\nexport function getValidUrl(url: string, fallbackUrl: string): string {\r\n  if (url) {\r\n    const r = /(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\r\n    if (r.test(url)) {\r\n      return url;\r\n    }\r\n    console.warn(`[ShareButtons]: Sharing link '${ url }' is invalid!`);\r\n  }\r\n  return fallbackUrl;\r\n}\r\n\r\nexport function printPage(): Observable<void> {\r\n  return new Observable((sub: Subscriber<any>) => document.defaultView.print());\r\n}\r\n\r\nexport function copyToClipboard({params, data, clipboard, updater}: ShareButtonFuncArgs<CopyToClipboardDataArgs>): Observable<void> {\r\n  return of(null).pipe(\r\n    tap(() => {\r\n      clipboard.copy(params.url);\r\n      // Disable copy button\r\n      updater.next({icon: data.successIcon, text: data.successText, disabled: true});\r\n    }),\r\n    delay(data.delay),\r\n    tap(() => updater.next({icon: data.icon, text: data.text, disabled: false})),\r\n    take(1)\r\n  );\r\n}\r\n\r\ninterface CopyToClipboardDataArgs {\r\n  delay: number;\r\n  text: string;\r\n  icon: string[];\r\n  successText: string;\r\n  successIcon: string[];\r\n}\r\n","import { IShareButtons, ShareParams } from './share.models';\r\nimport { copyToClipboard, printPage } from './utils';\r\n\r\n// Create message body that includes the sharing link used for Email, SMS and WhatsApp buttons\r\nconst linkInDescription = {\r\n  description: (p: ShareParams) => {\r\n    return p.description ? `${ p.description }\\r\\n${ p.url }` : p.url;\r\n  }\r\n};\r\n\r\nexport const SHARE_BUTTONS: IShareButtons = {\r\n  facebook: {\r\n    type: 'facebook',\r\n    text: 'Facebook',\r\n    ariaLabel: 'Share on Facebook',\r\n    icon: ['fab', 'facebook-f'],\r\n    color: '#4267B2',\r\n    share: {\r\n      desktop: 'https://www.facebook.com/sharer/sharer.php?'\r\n    },\r\n    params: {\r\n      url: 'u'\r\n    }\r\n  },\r\n  twitter: {\r\n    type: 'twitter',\r\n    text: 'Twitter',\r\n    ariaLabel: 'Share on Twitter',\r\n    icon: ['fab', 'twitter'],\r\n    color: '#00acee',\r\n    share: {\r\n      desktop: 'https://twitter.com/intent/tweet?'\r\n    },\r\n    params: {\r\n      url: 'url',\r\n      description: 'text',\r\n      tags: 'hashtags',\r\n      via: 'via'\r\n    }\r\n  },\r\n  linkedin: {\r\n    type: 'linkedin',\r\n    text: 'LinkedIn',\r\n    ariaLabel: 'Share on LinkedIn',\r\n    icon: ['fab', 'linkedin-in'],\r\n    color: '#006fa6',\r\n    share: {\r\n      desktop: 'https://www.linkedin.com/shareArticle?'\r\n    },\r\n    params: {\r\n      url: 'url',\r\n      title: 'title',\r\n      description: 'summary'\r\n    }\r\n  },\r\n  pinterest: {\r\n    type: 'pinterest',\r\n    text: 'Pinterest',\r\n    ariaLabel: 'Share on Pinterest',\r\n    icon: ['fab', 'pinterest-p'],\r\n    color: '#BD091D',\r\n    share: {\r\n      desktop: 'https://pinterest.com/pin/create/button/?'\r\n    },\r\n    params: {\r\n      url: 'url',\r\n      description: 'description',\r\n      image: 'media'\r\n    }\r\n  },\r\n  reddit: {\r\n    type: 'reddit',\r\n    text: 'Reddit',\r\n    ariaLabel: 'Share on Reddit',\r\n    icon: ['fab', 'reddit-alien'],\r\n    color: '#FF4006',\r\n    share: {\r\n      desktop: 'https://www.reddit.com/submit?'\r\n    },\r\n    params: {\r\n      url: 'url',\r\n      title: 'title'\r\n    }\r\n  },\r\n  tumblr: {\r\n    type: 'tumblr',\r\n    text: 'Tumblr',\r\n    ariaLabel: 'Share on Tumblr',\r\n    icon: ['fab', 'tumblr'],\r\n    color: '#36465D',\r\n    share: {\r\n      desktop: 'https://tumblr.com/widgets/share/tool?'\r\n    },\r\n    params: {\r\n      url: 'canonicalUrl',\r\n      description: 'caption',\r\n      tags: 'tags'\r\n    }\r\n  },\r\n  mix: {\r\n    type: 'mix',\r\n    text: 'Mix',\r\n    ariaLabel: 'Share on Mix',\r\n    icon: ['fab', 'mix'],\r\n    color: '#eb4924',\r\n    share: {\r\n      desktop: 'https://mix.com/add?'\r\n    },\r\n    params: {\r\n      url: 'url'\r\n    }\r\n  },\r\n  viber: {\r\n    type: 'viber',\r\n    text: 'Viber',\r\n    ariaLabel: 'Share on Viber',\r\n    icon: ['fab', 'viber'],\r\n    color: '#665ca7',\r\n    share: {\r\n      android: 'viber://forward?',\r\n      ios: 'viber://forward?'\r\n    },\r\n    params: {\r\n      description: 'text'\r\n    },\r\n    paramsFunc: linkInDescription\r\n  },\r\n  vk: {\r\n    type: 'vk',\r\n    text: 'VKontakte',\r\n    ariaLabel: 'Share on VKontakte',\r\n    icon: ['fab', 'vk'],\r\n    color: '#4C75A3',\r\n    share: {\r\n      desktop: 'https://vk.com/share.php?'\r\n    },\r\n    params: {\r\n      url: 'url'\r\n    }\r\n  },\r\n  telegram: {\r\n    type: 'telegram',\r\n    text: 'Telegram',\r\n    ariaLabel: 'Share on Telegram',\r\n    icon: ['fab', 'telegram-plane'],\r\n    color: '#0088cc',\r\n    share: {\r\n      desktop: 'https://t.me/share/url?'\r\n    },\r\n    params: {\r\n      url: 'url',\r\n      description: 'text'\r\n    }\r\n  },\r\n  messenger: {\r\n    type: 'messenger',\r\n    text: 'Messenger',\r\n    ariaLabel: 'Share on Messenger',\r\n    icon: ['fab', 'facebook-messenger'],\r\n    color: '#0080FF',\r\n    share: {\r\n      desktop: 'https://www.facebook.com/dialog/send?',\r\n      android: 'fb-messenger://share/?',\r\n      ios: 'fb-messenger://share/?'\r\n    },\r\n    params: {\r\n      url: 'link',\r\n      appId: 'app_id',\r\n      redirectUrl: 'redirect_uri'\r\n    }\r\n  },\r\n  whatsapp: {\r\n    type: 'whatsapp',\r\n    text: 'WhatsApp',\r\n    ariaLabel: 'Share on WhatsApp',\r\n    icon: ['fab', 'whatsapp'],\r\n    color: '#25D366',\r\n    share: {\r\n      desktop: 'https://api.whatsapp.com/send?',\r\n      android: 'whatsapp://send?',\r\n      ios: 'https://api.whatsapp.com/send?'\r\n    },\r\n    params: {\r\n      url: 'link',\r\n      description: 'text'\r\n    },\r\n    paramsFunc: linkInDescription\r\n  },\r\n  xing: {\r\n    type: 'xing',\r\n    text: 'Xing',\r\n    ariaLabel: 'Share on Xing',\r\n    icon: ['fab', 'xing'],\r\n    color: '#006567',\r\n    share: {\r\n      desktop: 'https://www.xing.com/spi/shares/new?'\r\n    },\r\n    params: {\r\n      url: 'url'\r\n    }\r\n  },\r\n  line: {\r\n    type: 'line',\r\n    text: 'Line',\r\n    ariaLabel: 'Share on Line',\r\n    icon: ['fab', 'line'],\r\n    color: '#00b900',\r\n    share: {\r\n      desktop: 'https://social-plugins.line.me/lineit/share?'\r\n    },\r\n    params: {\r\n      url: 'url'\r\n    }\r\n  },\r\n  sms: {\r\n    type: 'sms',\r\n    text: 'SMS',\r\n    ariaLabel: 'Share link via SMS',\r\n    icon: ['fas', 'sms'],\r\n    color: '#20c16c',\r\n    share: {\r\n      desktop: 'sms:?',\r\n      ios: 'sms:&'\r\n    },\r\n    params: {\r\n      description: 'body'\r\n    },\r\n    paramsFunc: linkInDescription\r\n  },\r\n  email: {\r\n    type: 'email',\r\n    text: 'Email',\r\n    ariaLabel: 'Share link via email',\r\n    icon: ['fas', 'envelope'],\r\n    color: '#FF961C',\r\n    share: {\r\n      desktop: 'mailto:?'\r\n    },\r\n    params: {\r\n      title: 'subject',\r\n      description: 'body'\r\n    },\r\n    paramsFunc: linkInDescription\r\n  },\r\n  print: {\r\n    type: 'print',\r\n    text: 'Print',\r\n    ariaLabel: 'Print page',\r\n    icon: ['fas', 'print'],\r\n    color: '#765AA2',\r\n    func: printPage\r\n  },\r\n  copy: {\r\n    type: 'copy',\r\n    text: 'Copy link',\r\n    ariaLabel: 'Copy link',\r\n    icon: ['fas', 'link'],\r\n    color: '#607D8B',\r\n    data: {\r\n      text: 'Copy link',\r\n      icon: ['fas', 'link'],\r\n      successText: 'Copied',\r\n      successIcon: ['fas', 'check'],\r\n      delay: 2000\r\n    },\r\n    func: copyToClipboard\r\n  }\r\n};\r\n\r\nexport type shareButtonName = string | 'facebook' | 'twitter' | 'pinterest' | 'linkedin' | 'email' | 'print' | 'reddit' | 'copy' | 'xing' | 'line' | 'sms' | 'tumblr' | 'whatsapp' | 'messenger' | 'telegram' | 'vk' | 'viber' | 'mix';\r\n","import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { IShareButton, SHARE_BUTTONS_CONFIG, ShareButtonsConfig, SharerMethod } from './share.models';\r\nimport { SHARE_BUTTONS } from './share.defaults';\r\nimport { mergeDeep } from './utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShareService {\r\n\r\n  /** Global config that applies on all share buttons in the app */\r\n  config: ShareButtonsConfig = {\r\n    sharerMethod: SharerMethod.Anchor,\r\n    sharerTarget: '_blank',\r\n    windowObj: this._document.defaultView,\r\n    windowFuncName: 'open',\r\n    prop: SHARE_BUTTONS,\r\n    theme: 'default',\r\n    include: [],\r\n    exclude: [],\r\n    autoSetMeta: true,\r\n    windowWidth: 800,\r\n    windowHeight: 500,\r\n    moreButtonIcon: 'ellipsis-h',\r\n    lessButtonIcon: 'minus',\r\n    moreButtonAriaLabel: 'Show more share buttons',\r\n    lessButtonAriaLabel: 'Show less share buttons'\r\n  };\r\n\r\n  /** Stream that emits when config changes */\r\n  config$ = new BehaviorSubject(this.config);\r\n\r\n  constructor(@Optional() @Inject(SHARE_BUTTONS_CONFIG) config: ShareButtonsConfig, @Inject(DOCUMENT) private _document: any) {\r\n    if (config) {\r\n      this.setConfig(config);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Share buttons properties, used to get the text, color and icon of each button.\r\n   */\r\n  get prop() {\r\n    return this.config.prop;\r\n  }\r\n\r\n  get windowSize() {\r\n    return `width=${ this.config.windowWidth }, height=${ this.config.windowHeight }`;\r\n  }\r\n\r\n  setConfig(config: ShareButtonsConfig) {\r\n    this.config = mergeDeep(this.config, config);\r\n    this.config$.next(this.config);\r\n  }\r\n\r\n  addButton(name: string, props: IShareButton) {\r\n    this.setConfig({\r\n      prop: {\r\n        [name]: props\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  HostListener,\r\n  Inject,\r\n  OnInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  SimpleChange,\r\n  EventEmitter,\r\n  ElementRef,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Meta } from '@angular/platform-browser';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { Clipboard } from '@angular/cdk/clipboard';\r\nimport { EMPTY, Observable, Subject, Subscriber } from 'rxjs';\r\nimport { takeUntil, tap } from 'rxjs/operators';\r\n\r\nimport { ShareService } from './share.service';\r\nimport { IShareButton, ShareDirectiveUpdater, ShareParams, ShareParamsFunc, SharerMethod } from './share.models';\r\nimport { getValidUrl } from './utils';\r\nimport { shareButtonName } from './share.defaults';\r\n\r\n@Directive({\r\n  selector: '[shareButton]',\r\n  exportAs: 'shareButton'\r\n})\r\nexport class ShareDirective implements OnInit, OnChanges, OnDestroy {\r\n\r\n  /** Variable used to check for the final sharer url (For testing only) */\r\n  private _finalUrl: string;\r\n\r\n  /** Share directive element ref */\r\n  private readonly _el: HTMLButtonElement;\r\n\r\n  /** A ref to button class - used to remove previous class when the button type is changed */\r\n  private _buttonClass: string;\r\n\r\n  /** Stream that emits when button is destroyed */\r\n  private readonly _destroyed = new Subject<void>();\r\n\r\n  /** Stream that emit when share button need to be updated */\r\n  private readonly _updater = new Subject<ShareDirectiveUpdater>();\r\n\r\n  /** Share button properties */\r\n  shareButton: IShareButton;\r\n\r\n  /** Share button color */\r\n  color: string;\r\n\r\n  /** Share button text */\r\n  text: string;\r\n\r\n  /** Share button icon */\r\n  icon: string | string[];\r\n\r\n  /** Share button type */\r\n  @Input('shareButton') shareButtonName: shareButtonName;\r\n\r\n  /** Set meta tags from document head, useful when SEO is supported */\r\n  @Input() autoSetMeta: boolean = this._share.config.autoSetMeta;\r\n\r\n  /** Sharing link */\r\n  @Input() url: string = this._share.config.url;\r\n\r\n  /** Sets the title parameter */\r\n  @Input() title: string = this._share.config.title;\r\n\r\n  /** Sets the description parameter */\r\n  @Input() description: string = this._share.config.description;\r\n\r\n  /** Sets the image parameter for sharing on Pinterest */\r\n  @Input() image: string = this._share.config.image;\r\n\r\n  /** Sets the tags parameter for sharing on Twitter and Tumblr */\r\n  @Input() tags: string = this._share.config.tags;\r\n\r\n  /** Sets the fb messenger redirect url to enable sharing on Messenger desktop */\r\n  @Input() redirectUrl: string = this._share.config.redirectUrl;\r\n\r\n  /** Stream that emits when share dialog is opened */\r\n  @Output() opened = new EventEmitter<string>();\r\n\r\n  /** Stream that emits when share dialog is closed */\r\n  @Output() closed = new EventEmitter<string>();\r\n\r\n  constructor(_el: ElementRef,\r\n              private _meta: Meta,\r\n              private _platform: Platform,\r\n              private _clipboard: Clipboard,\r\n              private _share: ShareService,\r\n              private _cd: ChangeDetectorRef,\r\n              @Inject(DOCUMENT) private _document: any) {\r\n    this._el = _el.nativeElement;\r\n  }\r\n\r\n  /**\r\n   * Share the link\r\n   */\r\n  @HostListener('click')\r\n  share() {\r\n    // Avoid SSR error\r\n    if (this._platform.isBrowser && this.shareButton) {\r\n      // Prepare sharer url params\r\n      const params: ShareParams = this.autoSetMeta ? this.getParamsFromMetaTags() : this.getParamsFromInputs();\r\n\r\n      // Prepare share button click\r\n      const click = this.shareButton.share ? this.open(params) : this.shareButton.func({\r\n        params,\r\n        data: this.shareButton.data,\r\n        clipboard: this._clipboard,\r\n        updater: this._updater\r\n      });\r\n\r\n      click.pipe(takeUntil(this._destroyed)).subscribe();\r\n    } else {\r\n      console.warn(`${ this.text } button is not compatible on this Platform`);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // This stream is mainly used to update the copy button text and icon when it is being clicked\r\n    this._updater.pipe(\r\n      tap((data: any) => {\r\n        this.icon = data.icon;\r\n        this.text = data.text;\r\n        this._el.style.pointerEvents = data.disabled ? 'none' : 'auto';\r\n        this._cd.markForCheck();\r\n      }),\r\n      takeUntil(this._destroyed)\r\n    ).subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    // Avoid SSR error\r\n    if (this._platform.isBrowser) {\r\n\r\n      // Create share button\r\n      if (this._shareButtonChanged(changes.shareButtonName)) {\r\n        this._createShareButton();\r\n      }\r\n      // Prepare share url\r\n      if (this._urlChanged(changes.url)) {\r\n        this.url = getValidUrl(\r\n          this.autoSetMeta\r\n            ? this.url || this._getMetaTagContent('og:url')\r\n            : this.url,\r\n          this._document.defaultView.location.href\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._destroyed.next();\r\n    this._destroyed.complete();\r\n  }\r\n\r\n  private _createShareButton() {\r\n    const button: IShareButton = this._share.config.prop[this.shareButtonName];\r\n    if (button) {\r\n      // Set share button properties\r\n      this.shareButton = button;\r\n\r\n      // Remove previous button class\r\n      this._el.classList.remove(`sb-${ this._buttonClass }`);\r\n\r\n      // Add new button class\r\n      this._el.classList.add(`sb-${ this.shareButtonName }`);\r\n\r\n      // Set button css color variable\r\n      this._el.style.setProperty('--button-color', this.shareButton.color);\r\n\r\n      // Keep a copy of the class for future replacement\r\n      this._buttonClass = this.shareButtonName;\r\n\r\n      this.color = this.shareButton.color;\r\n      this.text = this.shareButton.text;\r\n      this.icon = this.shareButton.icon;\r\n\r\n      // Set aria-label attribute\r\n      this._el.setAttribute('aria-label', button.ariaLabel);\r\n    } else {\r\n      console.error(`[ShareButtons]: The share button '${ this.shareButtonName }' does not exist!`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get meta tag content\r\n   */\r\n  private _getMetaTagContent(key: string): string {\r\n    const metaUsingProperty: HTMLMetaElement = this._meta.getTag(`property=\"${ key }\"`);\r\n    if (metaUsingProperty) {\r\n      return metaUsingProperty.getAttribute('content');\r\n    }\r\n    const metaUsingName: HTMLMetaElement = this._meta.getTag(`name=\"${ key }\"`);\r\n    if (metaUsingName) {\r\n      return metaUsingName.getAttribute('content');\r\n    }\r\n  }\r\n\r\n  private _shareButtonChanged(change: SimpleChange): boolean {\r\n    return change && (change.firstChange || change.previousValue !== change.currentValue);\r\n  }\r\n\r\n  private _urlChanged(change: SimpleChange): boolean {\r\n    return !this.url || (change && change.previousValue !== change.currentValue);\r\n  }\r\n\r\n  /**\r\n   * Get share params from meta tags first and fallback to user inputs\r\n   */\r\n  private getParamsFromMetaTags(): ShareParams {\r\n    return {\r\n      url: this.url,\r\n      title: this.title || this._getMetaTagContent('og:title'),\r\n      description: this.description || this._getMetaTagContent('og:description'),\r\n      image: this.image || this._getMetaTagContent('og:image'),\r\n      via: this._share.config.twitterAccount,\r\n      tags: this.tags,\r\n      appId: this._share.config.appId || this._getMetaTagContent('fb:app_id'),\r\n      redirectUrl: this.redirectUrl || this.url\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get share params from user inputs\r\n   */\r\n  private getParamsFromInputs(): ShareParams {\r\n    return {\r\n      url: this.url,\r\n      title: this.title,\r\n      description: this.description,\r\n      image: this.image,\r\n      tags: this.tags,\r\n      via: this._share.config.twitterAccount,\r\n      appId: this._share.config.appId,\r\n      redirectUrl: this.redirectUrl || this.url\r\n    };\r\n  }\r\n\r\n  private open(params: ShareParams): Observable<void> {\r\n    // Set sharer link based on user's device\r\n    let sharerLink: string;\r\n    if (this._platform.IOS && this.shareButton.share.ios) {\r\n      sharerLink = this.shareButton.share.ios;\r\n    } else if (this._platform.ANDROID && this.shareButton.share.android) {\r\n      sharerLink = this.shareButton.share.android;\r\n    } else {\r\n      sharerLink = this.shareButton.share.desktop;\r\n    }\r\n\r\n    if (sharerLink) {\r\n      // Set sharer link params\r\n      this._finalUrl = sharerLink + this._serializeParams(params);\r\n\r\n      // Log the sharer link in debug mode\r\n      if (this._share.config.debug) {\r\n        console.log('[DEBUG SHARE BUTTON]: ', this._finalUrl);\r\n      }\r\n\r\n      // Open the share window\r\n      // There are two methods available for opening the share window:\r\n      // 1. Using a real anchor\r\n      // 2. Using window.open\r\n      const sharerMethod = this.shareButton.method || this._share.config.sharerMethod;\r\n      const sharerTarget = this.shareButton.target || this._share.config.sharerTarget;\r\n\r\n      switch (sharerMethod) {\r\n\r\n        case SharerMethod.Anchor:\r\n          const linkElement: HTMLLinkElement = this._document.createElement('a');\r\n          // Make it open in a new tab/window (depends on user's browser configuration)\r\n          linkElement.setAttribute('target', sharerTarget);\r\n\r\n          // Prevent security vulnerability https://medium.com/@jitbit/target-blank-the-most-underestimated-vulnerability-ever-96e328301f4c\r\n          linkElement.setAttribute('rel', 'noopener noreferrer');\r\n          linkElement.href = this._finalUrl;\r\n          linkElement.click();\r\n          linkElement.remove();\r\n          break;\r\n\r\n        case SharerMethod.Window:\r\n          // Open link using Window object\r\n          const openWindow = this._share.config.windowObj[this._share.config.windowFuncName];\r\n          const popUpWindow = openWindow(this._finalUrl, sharerTarget, this._share.windowSize);\r\n\r\n          // Prevent security vulnerability https://medium.com/@jitbit/target-blank-the-most-underestimated-vulnerability-ever-96e328301f4c\r\n          this._share.config.windowObj.opener = null;\r\n\r\n          // Resolve when share dialog is closed\r\n          if (popUpWindow) {\r\n            return new Observable<void>((sub: Subscriber<void>) => {\r\n              const pollTimer = this._document.defaultView.setInterval(() => {\r\n                if (popUpWindow.closed) {\r\n                  this._document.defaultView.clearInterval(pollTimer);\r\n\r\n                  // Emit when share windows is closed\r\n                  this.closed.emit(this.shareButtonName);\r\n                  sub.next();\r\n                  sub.complete();\r\n                }\r\n              }, 200);\r\n            });\r\n          }\r\n          break;\r\n      }\r\n\r\n      // Emit when share window is opened\r\n      this.opened.emit(this.shareButtonName);\r\n    }\r\n    return EMPTY;\r\n  }\r\n\r\n  private _serializeParams(params: ShareParams): string {\r\n    return Object.entries(this.shareButton.params)\r\n      .map(([key, value]) => {\r\n        // Check if share button param has a map function\r\n        const paramFunc: ShareParamsFunc = this.shareButton.paramsFunc ? this.shareButton.paramsFunc[key] : null;\r\n\r\n        if (params[key] || paramFunc) {\r\n          const paramValue = paramFunc ? paramFunc(params) : params[key];\r\n          return `${ value }=${ encodeURIComponent(paramValue) }`;\r\n        }\r\n        return '';\r\n      })\r\n      .filter(urlParam => urlParam !== '')\r\n      .join('&');\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { ClipboardModule } from '@angular/cdk/clipboard';\r\n\r\nimport { ShareDirective } from './share-button.directive';\r\nimport { SHARE_BUTTONS_CONFIG, ShareButtonsConfig } from './share.models';\r\n\r\n@NgModule({\r\n  imports: [\r\n    PlatformModule,\r\n    ClipboardModule\r\n  ],\r\n  declarations: [\r\n    ShareDirective\r\n  ],\r\n  exports: [\r\n    ShareDirective\r\n  ]\r\n})\r\nexport class ShareModule {\r\n  static withConfig(config?: ShareButtonsConfig): ModuleWithProviders<ShareModule> {\r\n    return {\r\n      ngModule: ShareModule,\r\n      providers: [\r\n        {provide: SHARE_BUTTONS_CONFIG, useValue: config}\r\n      ]\r\n    };\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}