import * as i0 from '@angular/core';
import { EventEmitter, Component, ChangeDetectionStrategy, Input, Output, HostBinding, NgModule } from '@angular/core';
import * as i3 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i2 from '@fortawesome/angular-fontawesome';
import { FontAwesomeModule } from '@fortawesome/angular-fontawesome';
import * as i1 from 'ngx-sharebuttons';
import { SHARE_BUTTONS_CONFIG, ShareModule } from 'ngx-sharebuttons';

class ShareButton {
    /** Set theme as button class */
    get buttonClass() {
        return `sb-button sb-${this.theme}`;
    }
    constructor(_share) {
        this._share = _share;
        /** Sets the fb messenger redirect url to enable sharing on Messenger desktop */
        this.redirectUrl = this._share.config.redirectUrl;
        /** Show button icon */
        this.showIcon = true;
        /** Show button text */
        this.showText = false;
        /** Button theme */
        this.theme = this._share.config.theme;
        /** Stream that emits when share dialog is opened */
        this.opened = new EventEmitter();
        /** Stream that emits when share dialog is closed */
        this.closed = new EventEmitter();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.2", ngImport: i0, type: ShareButton, deps: [{ token: i1.ShareService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.2", type: ShareButton, selector: "share-button", inputs: { button: "button", url: "url", title: "title", description: "description", image: "image", tags: "tags", redirectUrl: "redirectUrl", autoSetMeta: "autoSetMeta", showIcon: "showIcon", showText: "showText", text: "text", icon: "icon", theme: "theme", disabled: "disabled" }, outputs: { opened: "opened", closed: "closed" }, host: { properties: { "class": "this.buttonClass" } }, ngImport: i0, template: "<button #btn=\"shareButton\"\r\n        type=\"button\"\r\n        class=\"sb-wrapper\"\r\n        [class.sb-show-icon]=\"showIcon\"\r\n        [class.sb-show-text]=\"showText\"\r\n        [shareButton]=\"button\"\r\n        [url]=\"url\"\r\n        [image]=\"image\"\r\n        [title]=\"title\"\r\n        [description]=\"description\"\r\n        [tags]=\"tags\"\r\n        [redirectUrl]=\"redirectUrl\"\r\n        [autoSetMeta]=\"autoSetMeta\"\r\n        [disabled]=\"disabled\"\r\n        (opened)=\"opened.emit($event)\"\r\n        (closed)=\"closed.emit($event)\">\r\n\r\n  <div *ngIf=\"btn\" class=\"sb-content\">\r\n\r\n    <div *ngIf=\"showIcon && btn.icon\" class=\"sb-icon\">\r\n      <fa-icon [icon]=\"icon || btn.icon\" [fixedWidth]=\"true\"></fa-icon>\r\n    </div>\r\n\r\n    <div *ngIf=\"showText\" class=\"sb-text\">\r\n      {{ text || btn.text }}\r\n    </div>\r\n\r\n  </div>\r\n</button>\r\n", styles: [":host-context([button=facebook]){--button-color: #4267B2}:host-context([button=twitter]){--button-color: #00acee}:host-context([button=google]){--button-color: #db4437}:host-context([button=mix]){--button-color: #ff8226}:host-context([button=line]){--button-color: #00b900}:host-context([button=linkedin]){--button-color: #006fa6}:host-context([button=pinterest]){--button-color: #bd081c}:host-context([button=reddit]){--button-color: #ff4006}:host-context([button=tumblr]){--button-color: #36465d}:host-context([button=whatsapp]){--button-color: #25d366}:host-context([button=messenger]){--button-color: #0080FF}:host-context([button=telegram]){--button-color: #0088cc}:host-context([button=xing]){--button-color: #006567}:host-context([button=sms]){--button-color: #20c16c}:host-context([button=email]){--button-color: #FF961C}:host-context([button=viber]){--button-color: #665ca7}:host-context([button=vk]){--button-color: #4C75A3}:host-context([button=copy]){--button-color: #607D8B}:host-context([button=print]){--button-color: #765AA2}:host-context([button=expand]){--button-color: #FF6651}button{cursor:pointer;position:relative;outline:0;-webkit-print-color-adjust:exact;margin:var(--sb-margin, .3125em);padding:var(--sb-padding, 0);min-width:var(--sb-min-width, 4.125em);height:var(--sb-height, 2.5em);color:var(--sb-color, #fff);background:var(--sb-background);font-size:var(--sb-font-size, 13px);line-height:var(--sb-line-height, 2.571em);border:var(--sb-border);border-radius:var(--sb-border-radius);transition:var(--sb-transition);box-shadow:var(--sb-box-shadow);text-shadow:var(--sb-text-shadow);overflow:var(--sb-overflow)}.sb-icon,.sb-text{display:flex;align-items:center;justify-content:center;-webkit-user-select:none;-moz-user-select:none;user-select:none}.sb-content{flex:1;display:flex;height:100%;width:100%;position:relative}.sb-text{flex:1;height:100%;white-space:nowrap;padding:var(--sb-text-padding, 0 .7em);font-weight:var(--sb-font-weight, bold)}.sb-icon{text-align:center;width:100%;height:100%;min-width:2em;font-size:var(--sb-icon-size, 1.2em)}\n"], dependencies: [{ kind: "directive", type: i1.ShareDirective, selector: "[shareButton]", inputs: ["shareButton", "autoSetMeta", "url", "title", "description", "image", "tags", "redirectUrl"], outputs: ["opened", "closed"], exportAs: ["shareButton"] }, { kind: "component", type: i2.FaIconComponent, selector: "fa-icon", inputs: ["icon", "title", "animation", "spin", "pulse", "mask", "styles", "flip", "size", "pull", "border", "inverse", "symbol", "rotate", "fixedWidth", "classes", "transform", "a11yRole"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.2", ngImport: i0, type: ShareButton, decorators: [{
            type: Component,
            args: [{ selector: 'share-button', changeDetection: ChangeDetectionStrategy.OnPush, template: "<button #btn=\"shareButton\"\r\n        type=\"button\"\r\n        class=\"sb-wrapper\"\r\n        [class.sb-show-icon]=\"showIcon\"\r\n        [class.sb-show-text]=\"showText\"\r\n        [shareButton]=\"button\"\r\n        [url]=\"url\"\r\n        [image]=\"image\"\r\n        [title]=\"title\"\r\n        [description]=\"description\"\r\n        [tags]=\"tags\"\r\n        [redirectUrl]=\"redirectUrl\"\r\n        [autoSetMeta]=\"autoSetMeta\"\r\n        [disabled]=\"disabled\"\r\n        (opened)=\"opened.emit($event)\"\r\n        (closed)=\"closed.emit($event)\">\r\n\r\n  <div *ngIf=\"btn\" class=\"sb-content\">\r\n\r\n    <div *ngIf=\"showIcon && btn.icon\" class=\"sb-icon\">\r\n      <fa-icon [icon]=\"icon || btn.icon\" [fixedWidth]=\"true\"></fa-icon>\r\n    </div>\r\n\r\n    <div *ngIf=\"showText\" class=\"sb-text\">\r\n      {{ text || btn.text }}\r\n    </div>\r\n\r\n  </div>\r\n</button>\r\n", styles: [":host-context([button=facebook]){--button-color: #4267B2}:host-context([button=twitter]){--button-color: #00acee}:host-context([button=google]){--button-color: #db4437}:host-context([button=mix]){--button-color: #ff8226}:host-context([button=line]){--button-color: #00b900}:host-context([button=linkedin]){--button-color: #006fa6}:host-context([button=pinterest]){--button-color: #bd081c}:host-context([button=reddit]){--button-color: #ff4006}:host-context([button=tumblr]){--button-color: #36465d}:host-context([button=whatsapp]){--button-color: #25d366}:host-context([button=messenger]){--button-color: #0080FF}:host-context([button=telegram]){--button-color: #0088cc}:host-context([button=xing]){--button-color: #006567}:host-context([button=sms]){--button-color: #20c16c}:host-context([button=email]){--button-color: #FF961C}:host-context([button=viber]){--button-color: #665ca7}:host-context([button=vk]){--button-color: #4C75A3}:host-context([button=copy]){--button-color: #607D8B}:host-context([button=print]){--button-color: #765AA2}:host-context([button=expand]){--button-color: #FF6651}button{cursor:pointer;position:relative;outline:0;-webkit-print-color-adjust:exact;margin:var(--sb-margin, .3125em);padding:var(--sb-padding, 0);min-width:var(--sb-min-width, 4.125em);height:var(--sb-height, 2.5em);color:var(--sb-color, #fff);background:var(--sb-background);font-size:var(--sb-font-size, 13px);line-height:var(--sb-line-height, 2.571em);border:var(--sb-border);border-radius:var(--sb-border-radius);transition:var(--sb-transition);box-shadow:var(--sb-box-shadow);text-shadow:var(--sb-text-shadow);overflow:var(--sb-overflow)}.sb-icon,.sb-text{display:flex;align-items:center;justify-content:center;-webkit-user-select:none;-moz-user-select:none;user-select:none}.sb-content{flex:1;display:flex;height:100%;width:100%;position:relative}.sb-text{flex:1;height:100%;white-space:nowrap;padding:var(--sb-text-padding, 0 .7em);font-weight:var(--sb-font-weight, bold)}.sb-icon{text-align:center;width:100%;height:100%;min-width:2em;font-size:var(--sb-icon-size, 1.2em)}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.ShareService }]; }, propDecorators: { button: [{
                type: Input
            }], url: [{
                type: Input
            }], title: [{
                type: Input
            }], description: [{
                type: Input
            }], image: [{
                type: Input
            }], tags: [{
                type: Input
            }], redirectUrl: [{
                type: Input
            }], autoSetMeta: [{
                type: Input
            }], showIcon: [{
                type: Input
            }], showText: [{
                type: Input
            }], text: [{
                type: Input
            }], icon: [{
                type: Input
            }], theme: [{
                type: Input
            }], disabled: [{
                type: Input
            }], opened: [{
                type: Output
            }], closed: [{
                type: Output
            }], buttonClass: [{
                type: HostBinding,
                args: ['class']
            }] } });

class ShareButtonModule {
    static withConfig(config) {
        return {
            ngModule: ShareButtonModule,
            providers: [{ provide: SHARE_BUTTONS_CONFIG, useValue: config }]
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.2", ngImport: i0, type: ShareButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.0.2", ngImport: i0, type: ShareButtonModule, declarations: [ShareButton], imports: [ShareModule,
            FontAwesomeModule,
            CommonModule], exports: [ShareModule,
            FontAwesomeModule,
            ShareButton] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.0.2", ngImport: i0, type: ShareButtonModule, imports: [ShareModule,
            FontAwesomeModule,
            CommonModule, ShareModule,
            FontAwesomeModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.2", ngImport: i0, type: ShareButtonModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        ShareButton
                    ],
                    imports: [
                        ShareModule,
                        FontAwesomeModule,
                        CommonModule
                    ],
                    exports: [
                        ShareModule,
                        FontAwesomeModule,
                        ShareButton
                    ]
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { ShareButton, ShareButtonModule };
//# sourceMappingURL=ngx-sharebuttons-button.mjs.map
